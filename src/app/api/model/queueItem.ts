/**
 * Inbox API
 * Manage work for human moderators by adding, checking out and completing work items. Store User Generated Content to the database.  This will store it twice, once in short-term storage in it's exact form amd again in long term storage in it's redacted and pseudonymized form 
 *
 * OpenAPI spec version: 2.1.1
 * Contact: support@twohat.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { Checkout } from './checkout';
import { ClientId } from './clientId';
import { CommentDetails } from './commentDetails';
import { Decision } from './decision';
import { Language } from './language';
// import { ModelObject } from './modelObject';
import { QueueItemRedacted } from './queueItemRedacted';
import { ReviewsNeeded } from './reviewsNeeded';
import { Topics } from './topics';
import { Prediction } from './prediction';

/**
 * This has the metadata about this work item 
 */
export interface QueueItem { 
    checkout?: Checkout;
    clientId?: ClientId;
    /**
     * Unixtimestamp (milliseconds since Epoch) of when this item was first made
     */
    dateCreated?: number;
    /**
     * The id for this queue so if you want to update it or modify it's subfields you will need this
     */
    contentId?: string;
    /**
     * What moderator decisions where made on this item
     */
    decisions?: Array<Decision>;
    comments?: CommentDetails;
    language?: Language;
    /**
     * FUTURE | Occasionally we may run AI on certain users to check for things like grooming, suidice, sextortion and other conversation items.  This will have any predictions that have been so far.
     */
    predictions?: Array<Prediction>,//{ [key: string]: ModelObject; };
    /**
     * How important is this item.  For example if it is reported content it will go up in priority each time it is added
     */
    priority?: number;
    redacted?: QueueItemRedacted;
    reviewsNeeded?: ReviewsNeeded;
    /**
     * If it was text and ran through CommunitySift it will use the simplified form here.  This is the actual rules used to  determine the risk of the text.  So \"HELLLOOOO!!!!\" should become lowercase, without caps as a rule matches \"helloo\". Likewise \"you are ugly\" should become \"you are {{mild_bully_word}}\" if a smart rule was used.  This also helps with search as it fixes the spelling and allows you to find text that have rules. 
     */
    simplified?: string;
    /**
     * What tags are associated with this item  To add or remove a tag use the POST .../review API endpoint 
     */
    tags?: Array<string>;
    topics?: Topics;
}