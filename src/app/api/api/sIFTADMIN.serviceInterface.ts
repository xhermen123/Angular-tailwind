/**
 * Inbox API
 * Manage work for human moderators by adding, checking out and completing work items. Store User Generated Content to the database.  This will store it twice, once in short-term storage in it's exact form amd again in long term storage in it's redacted and pseudonymized form 
 *
 * OpenAPI spec version: 2.1.1
 * Contact: support@twohat.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';


import { Queue } from '../model/queue';


import { Configuration }                                     from '../configuration';


export interface SIFTADMINServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;
    

    /**
    * Delete a client and all their data
    * This will delete all data we have on a client. Typically called after a client leaves 
    * @param clientId The unique identifier for this client
    */
    deleteClient(clientId: number, extraHttpRequestParams?: any): Observable<Queue>;

    /**
    * Delete a queue
    * This will remove this queue and if there are content inside it then that too.  If you are just trying to remove content then you should use ./items API endpoint.
    * @param queueId The unique identifier for this queue
    */
    deleteQueue(queueId: string, extraHttpRequestParams?: any): Observable<Queue>;

    /**
    * Add a queue
    * A Queue is a group of work to be done by moderators.  This will create or update a queue.
    * @param queueId The unique identifier for this queue
    * @param body The queue to be added
    */
    putQueue(queueId: string, body?: Queue, extraHttpRequestParams?: any): Observable<Queue>;

}
